/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import BUS.DonHangBUS;
import BUS.ChiTietDonBUS;
import BUS.SanPhamBUS;
import BUS.RFIDTagBUS;
import BUS.Utils;
import DTO.DonHangDTO;
import DTO.ChiTietDonHangDTO;
import DTO.SanPhamDTO;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Set;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hung
 */
public class TaoDonForm1 extends javax.swing.JFrame
{

    DefaultTableModel tbModelDon, tbModelSanPham;
    SanPhamBUS sanPhamBUS;
    RFIDTagBUS tagBUS = new RFIDTagBUS();
    DonHangBUS orderBUS = new DonHangBUS();
    ChiTietDonBUS orderDetailBUS = new ChiTietDonBUS();
    Utils ult = new Utils();
    int rowOrder = -2, rowProduct = -2;
	
    public TaoDonForm1()
    {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        this.setVisible(false);
        createTableSanPham();
        clear();
    }

    public void clear()
    {
        jBtnOK.setEnabled(false);
        jBtnTaoDon.setEnabled(false);
        jBtnXoa.setEnabled(false);
        jTableDon.clearSelection();
        jTableSanPham.clearSelection();
        jTxtQuantity.setEditable(false);
        jTxtQuantity.setText("");
        jTxtQuantity.setBackground(new Color(200, 200, 200));
        rowProduct = -2;
        rowOrder = -2;
    }

    public void createTableModelSanPham(DefaultTableModel model)
    {
        sanPhamBUS = new SanPhamBUS();
        for (SanPhamDTO sanPham : sanPhamBUS.getList())
        {
            Vector row = new Vector();
            row.add(sanPham.getProductId());
            row.add(sanPham.getProductName());
            row.add(sanPham.getProductQuantity());
            row.add(sanPham.getProductDetail());
            model.addRow(row);
        }
    }

    public void createTableSanPham()
    {
        tbModelSanPham.setRowCount(0);
        tbModelDon.setRowCount(0);
        createTableModelSanPham(tbModelSanPham);
        jTableSanPham.setRowSorter(null);
        jTableSanPham.setAutoCreateRowSorter(true);
        jTableSanPham.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jTableSanPham.setModel(tbModelSanPham);
        jBtnTaoDon.setEnabled(false);
        jBtnXoa.setEnabled(false);
        jBtnOK.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDon = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableSanPham = new javax.swing.JTable();
        jBtnTaoDon = new javax.swing.JButton();
        jBtnXoa = new javax.swing.JButton();
        jBtnOK = new javax.swing.JButton();
        jTxtQuantity = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(990, 650));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TẠO ĐƠN XUẤT");
        jLabel1.setToolTipText("");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 243, 40));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("ĐƠN HÀNG XUẤT");
        jLabel2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 70, 163, 40));

        Vector tableCol = new Vector();
        tableCol.add("ID Sản Phẩm");
        tableCol.add("Số Lượng");

        tbModelDon = new DefaultTableModel (tableCol,0)
        {
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return false;
            }
        };
        jTableDon.setModel (tbModelDon);
        jTableDon.setShowGrid(true);
        jTableDon.setFocusable(false);
        jTableDon.setIntercellSpacing(new Dimension(0,0));
        jTableDon.setRowHeight(25);
        jTableDon.getTableHeader().setOpaque(false);
        jTableDon.setFillsViewportHeight(true);
        //        jTableDon.getTableHeader().setBackground(new Color(145,209,242));
        //        jTableDon.getTableHeader().setForeground(new Color(51, 51, 51));
        jTableDon.getTableHeader().setFont (new Font("Dialog", Font.BOLD, 13));
        //        jTableDon.setSelectionBackground(new Color(76,121,255));
        jTableDon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTableDon.setGridColor(new java.awt.Color(83, 86, 88));
        jTableDon.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jTableDonMouseClicked(evt);
            }
        });
        jTableDon.getColumn (tableCol.elementAt (0)).setPreferredWidth (150);
        jTableDon.getColumn (tableCol.elementAt (1)).setPreferredWidth (150);
        jTableDon.setAutoResizeMode (javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(jTableDon);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 120, 380, 460));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("DANH SÁCH SẢN PHẨM");
        jLabel3.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 163, 40));

        Vector tableColProduct = new Vector();
        tableColProduct.add("ID Sản Phẩm");
        tableColProduct.add("Tên Sản Phẩm");
        tableColProduct.add("SL Còn Lại");
        tableColProduct.add("Chi Tiết Sản Phẩm");

        tbModelSanPham = new DefaultTableModel (tableColProduct,0)
        {
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return false;
            }
        };
        jTableSanPham.setModel (tbModelSanPham);
        jTableSanPham.setShowGrid(true);
        jTableSanPham.setFocusable(false);
        jTableSanPham.setIntercellSpacing(new Dimension(0,0));
        jTableSanPham.setRowHeight(25);
        jTableSanPham.getTableHeader().setOpaque(false);
        jTableSanPham.setFillsViewportHeight(true);
        //        jTableDon.getTableHeader().setBackground(new Color(145,209,242));
        //        jTableDon.getTableHeader().setForeground(new Color(51, 51, 51));
        jTableSanPham.getTableHeader().setFont (new Font("Dialog", Font.BOLD, 13));
        //        jTableDon.setSelectionBackground(new Color(76,121,255));
        jTableSanPham.setAutoCreateRowSorter(true);
        jTableSanPham.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTableSanPham.setGridColor(new java.awt.Color(83, 86, 88));
        jTableSanPham.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jTableSanPhamMouseClicked(evt);
            }
        });
        jTableSanPham.getColumn (tableColProduct.elementAt (0)).setPreferredWidth (100);
        jTableSanPham.getColumn (tableColProduct.elementAt (1)).setPreferredWidth (200);
        jTableSanPham.getColumn (tableColProduct.elementAt (2)).setPreferredWidth (100);
        jTableSanPham.getColumn (tableColProduct.elementAt (3)).setPreferredWidth (300);
        jTableSanPham.setAutoResizeMode (javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(jTableSanPham);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 520, 460));

        jBtnTaoDon.setBackground(new java.awt.Color(255, 255, 255));
        jBtnTaoDon.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jBtnTaoDon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-create-32.png"))); // NOI18N
        jBtnTaoDon.setBorder(null);
        jBtnTaoDon.setPreferredSize(new java.awt.Dimension(38, 38));
        jBtnTaoDon.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jBtnTaoDonActionPerformed(evt);
            }
        });
        jPanel1.add(jBtnTaoDon, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 592, -1, -1));

        jBtnXoa.setBackground(new java.awt.Color(255, 255, 255));
        jBtnXoa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jBtnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_delete_32.png"))); // NOI18N
        jBtnXoa.setBorder(null);
        jBtnXoa.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jBtnXoaActionPerformed(evt);
            }
        });
        jPanel1.add(jBtnXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 595, -1, -1));

        jBtnOK.setBackground(new java.awt.Color(255, 255, 255));
        jBtnOK.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jBtnOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_checked_32.png"))); // NOI18N
        jBtnOK.setBorder(null);
        jBtnOK.setPreferredSize(new java.awt.Dimension(38, 38));
        jBtnOK.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jBtnOKActionPerformed(evt);
            }
        });
        jPanel1.add(jBtnOK, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 590, -1, -1));
        jPanel1.add(jTxtQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 590, 100, 40));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Số lượng");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 590, 70, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDonMouseClicked
        // TODO add your handling code here:
        int row = jTableDon.getSelectedRow();

        if (row != -1)
        {
            rowOrder = row;
            jBtnXoa.setEnabled(true);
        }

    }//GEN-LAST:event_jTableDonMouseClicked

    private void jTableSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableSanPhamMouseClicked
        // TODO add your handling code here:
        int row = jTableSanPham.getSelectedRow();

        if (row != -1)
        {
            rowProduct = row;
            jBtnOK.setEnabled(true);
            jTxtQuantity.setEditable(true);
            jTxtQuantity.setText("1");
            jTxtQuantity.setBackground(new Color(255, 255, 255));
        }

    }//GEN-LAST:event_jTableSanPhamMouseClicked

    private void jBtnTaoDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnTaoDonActionPerformed
        // TODO add your handling code here:
        DonHangDTO donHang = new DonHangDTO();
        donHang.setOrderId(ult.createOrderId());
        donHang.setOrderDate(ult.createDateNow());
        donHang.setStatus(2);

        if (orderBUS.insertOrder(donHang))
        {
            ArrayList<ChiTietDonHangDTO> chitietDonList = new ArrayList<>();
            ArrayList<SanPhamDTO> sanPhamList = new ArrayList<>();
            ChiTietDonHangDTO chitietDon;
            SanPhamDTO sanPham;
            for (int i = 0; i < tbModelDon.getRowCount(); i++)
            {
                chitietDon = new ChiTietDonHangDTO();
                chitietDon.setOrderId(donHang.getOrderId());
                chitietDon.setProductId((String) tbModelDon.getValueAt(i, 0));
                chitietDon.setOrderQuantity(Integer.parseInt(String.valueOf(tbModelDon.getValueAt(i, 1))));
                chitietDonList.add(chitietDon);

                for (int j = 0; j < tbModelSanPham.getRowCount(); j++)
                {
                    if (tbModelDon.getValueAt(i, 0).equals(tbModelSanPham.getValueAt(j, 0)))
                    {
                        sanPham = new SanPhamDTO();
                        sanPham.setProductId((String) tbModelSanPham.getValueAt(j, 0));
                        sanPham.setProductQuantity(Integer.parseInt(String.valueOf(tbModelSanPham.getValueAt(j, 2))));
                        sanPhamList.add(sanPham);
                    }
                }
            }

            if (orderDetailBUS.insertOrderDetail(chitietDonList) && sanPhamBUS.updateProducts(sanPhamList))
            {
                JOptionPane.showMessageDialog(this, "Tạo đơn xuất ok!!!");
                tbModelDon.setRowCount(0);
                clear();
                return;
            }
        }

        JOptionPane.showMessageDialog(this, "Tạo đơn thất bại!!!!!");
    }//GEN-LAST:event_jBtnTaoDonActionPerformed

    private void jBtnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnXoaActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < tbModelSanPham.getRowCount(); i++)
        {
            if (tbModelDon.getValueAt(rowOrder, 0).equals(tbModelSanPham.getValueAt(i, 0)))
            {
                tbModelSanPham.setValueAt(Integer.parseInt(String.valueOf(tbModelSanPham.getValueAt(i, 2))) + Integer.parseInt(String.valueOf(tbModelDon.getValueAt(rowOrder, 1))), i, 2);
                tbModelDon.removeRow(rowOrder);
                jTableDon.clearSelection();
                rowOrder = -2;
                jBtnXoa.setEnabled(false);

                if (tbModelDon.getRowCount() == 0)
                {
                    jBtnTaoDon.setEnabled(false);
                }

                return;
            }
        }
    }//GEN-LAST:event_jBtnXoaActionPerformed

    private void jBtnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnOKActionPerformed
        // TODO add your handling code here:
        if (jTxtQuantity.getText().equals("") || jTxtQuantity.getText().equals(null))
        {
            JOptionPane.showMessageDialog(this, "Nhập số lượng!!!");
        } else
        {
            try
            {
                int quantity = Integer.parseInt(jTxtQuantity.getText());

                if (quantity > (Integer) tbModelSanPham.getValueAt(rowProduct, 2))
                {
                    JOptionPane.showMessageDialog(this, "Vượt quá số lượng hiện có!!!");
                    return;
                }

                if (quantity <= 0)
                {
                    JOptionPane.showMessageDialog(this, "Số lượng phải lớn hơn 0!!!!");
                    return;
                }

                for (int i = 0; i < tbModelDon.getRowCount(); i++)
                {
                    if (tbModelSanPham.getValueAt(rowProduct, 0).equals(tbModelDon.getValueAt(i, 0)))
                    {
                        tbModelDon.setValueAt(Integer.parseInt(String.valueOf(tbModelDon.getValueAt(i, 1))) + quantity, i, 1);
                        tbModelSanPham.setValueAt((Integer) tbModelSanPham.getValueAt(rowProduct, 2) - quantity, rowProduct, 2);
                        jBtnTaoDon.setEnabled(true);
                        jBtnXoa.setEnabled(false);
                        return;
                    }
                }
                
                Vector row = new Vector();
                row.add(tbModelSanPham.getValueAt(rowProduct, 0));
                row.add(jTxtQuantity.getText());
                tbModelDon.addRow(row);
                tbModelSanPham.setValueAt((Integer) tbModelSanPham.getValueAt(rowProduct, 2) - quantity, rowProduct, 2);
                jBtnTaoDon.setEnabled(true);
                jBtnXoa.setEnabled(false);
            } catch (NumberFormatException e)
            {
                JOptionPane.showMessageDialog(this, "Kiểu dữ liệu không hợp lệ!!!");
            }
        }
    }//GEN-LAST:event_jBtnOKActionPerformed

    public JPanel getjPanel1()
    {
        return jPanel1;
    }

    public void setjPanel1(JPanel jPanel1)
    {
        this.jPanel1 = jPanel1;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnOK;
    private javax.swing.JButton jBtnTaoDon;
    private javax.swing.JButton jBtnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableDon;
    private javax.swing.JTable jTableSanPham;
    private javax.swing.JTextField jTxtQuantity;
    // End of variables declaration//GEN-END:variables
}
