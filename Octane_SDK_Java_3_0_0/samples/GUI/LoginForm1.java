package GUI;

import BUS.Utils;
import DTO.RFIDTagDTO;
import com.impinj.octane.ImpinjReader;
import com.impinj.octane.Tag;
import com.impinj.octane.TagReport;
import com.impinj.octane.TagReportListener;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import DTO.DangNhapDTO;
import java.util.stream.Collectors;

/**
 *
 * @author Hung
 */
public class LoginForm1 extends javax.swing.JFrame implements TagReportListener
{

    public static HashMap<String, Tag> tagMap = new HashMap<>();
    public static ArrayList<RFIDTagDTO> tagDTOsMR = new ArrayList<>();
    public static List<DangNhapDTO> listUser = new ArrayList<>();
    public static int flag = 0;

    public static QuetDonForm1 quetDonForm;
    GanTagForm1 ganTagForm;
    RFIDTagDTO rfidTagDTO;
    DashBoard1 dashboard1;
    Utils ult = new Utils();

    public LoginForm1()
    {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        this.setBackground(new Color(0, 0, 0, 0));
        jPanel1.setBackground(new Color(0, 0, 0, 0));
        setLocationRelativeTo(null);
        setVisible(true);
        khoitaoUser();

        dashboard1 = new DashBoard1(this);
        this.setInputForm(dashboard1.getGanTagForm());
        this.setOutputForm(dashboard1.getQuetDonForm());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        jLabelMinimize = new javax.swing.JLabel();
        jLabelClose = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldTK = new javax.swing.JTextField();
        jPasswordFieldMK = new javax.swing.JPasswordField();
        jBtnLogin = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelMinimize.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelMinimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_macos_minimize_32.png"))); // NOI18N
        jLabelMinimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelMinimize.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jLabelMinimizeMouseClicked(evt);
            }
        });
        jPanel1.add(jLabelMinimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 50, 30, 30));

        jLabelClose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_cancel_32.png"))); // NOI18N
        jLabelClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelClose.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jLabelCloseMouseClicked(evt);
            }
        });
        jPanel1.add(jLabelClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 50, 30, 30));

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(123, 177, 184));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_privacy_32.png"))); // NOI18N
        jLabel5.setText("Mật Khẩu");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 250, 140, 40));

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(123, 177, 184));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_add_user_male_32.png"))); // NOI18N
        jLabel6.setText("Tài Khoản");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 160, 140, 40));

        jTextFieldTK.setBackground(new java.awt.Color(13, 106, 124));
        jTextFieldTK.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jTextFieldTK.setForeground(new java.awt.Color(123, 177, 184));
        jTextFieldTK.setText("Nhập tài khoản....");
        jTextFieldTK.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));
        jTextFieldTK.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextFieldTK.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                jTextFieldTKFocusGained(evt);
            }
        });
        jTextFieldTK.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jTextFieldTKMouseClicked(evt);
            }
        });
        jPanel1.add(jTextFieldTK, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 200, 260, 30));

        jPasswordFieldMK.setBackground(new java.awt.Color(13, 106, 124));
        jPasswordFieldMK.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jPasswordFieldMK.setForeground(new java.awt.Color(123, 177, 184));
        jPasswordFieldMK.setText("**********");
        jPasswordFieldMK.setToolTipText("");
        jPasswordFieldMK.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));
        jPasswordFieldMK.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                jPasswordFieldMKFocusGained(evt);
            }
        });
        jPasswordFieldMK.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jPasswordFieldMKActionPerformed(evt);
            }
        });
        jPasswordFieldMK.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                jPasswordFieldMKKeyPressed(evt);
            }
        });
        jPanel1.add(jPasswordFieldMK, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 290, 260, 30));

        jBtnLogin.setBackground(new java.awt.Color(136, 193, 184));
        jBtnLogin.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        jBtnLogin.setText("Đăng nhập");
        jBtnLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBtnLogin.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jBtnLoginMouseClicked(evt);
            }
        });
        jBtnLogin.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jBtnLoginActionPerformed(evt);
            }
        });
        jPanel1.add(jBtnLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 350, 130, 40));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Picture2.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 20, 480, 490));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Layer 2.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 470, 450));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 886, 530));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelMinimizeMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jLabelMinimizeMouseClicked
    {//GEN-HEADEREND:event_jLabelMinimizeMouseClicked
        this.setState(this.ICONIFIED);
    }//GEN-LAST:event_jLabelMinimizeMouseClicked

    private void jPasswordFieldMKActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jPasswordFieldMKActionPerformed
    {//GEN-HEADEREND:event_jPasswordFieldMKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordFieldMKActionPerformed

    private void jTextFieldTKFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_jTextFieldTKFocusGained
    {//GEN-HEADEREND:event_jTextFieldTKFocusGained
        //jTextField2.setText ("");
    }//GEN-LAST:event_jTextFieldTKFocusGained

    private void jPasswordFieldMKFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_jPasswordFieldMKFocusGained
    {//GEN-HEADEREND:event_jPasswordFieldMKFocusGained
        jPasswordFieldMK.setText("");
    }//GEN-LAST:event_jPasswordFieldMKFocusGained

    void khoitaoUser()
    {
        listUser.add(new DangNhapDTO("Lê Hưng", "lehung123", "123"));
        listUser.add(new DangNhapDTO("Hoàng Linh", "hoanglinh123", "123"));
    }

    private void jBtnLoginActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jBtnLoginActionPerformed
    {//GEN-HEADEREND:event_jBtnLoginActionPerformed

        if (listUser.stream().filter(predicate -> predicate.getTk().equals(this.getjTextFieldTK().getText())).findFirst().isPresent()
                && listUser.stream().filter(predicate -> predicate.getMk().equals(this.getjPasswordFieldMK().getText())).findFirst().isPresent())
        {
            JOptionPane.showMessageDialog(this, "Đăng nhập thành công!!");
            this.setVisible(false);
            DangNhapDTO resultUser = listUser.stream().filter(user -> user.getTk().equals(this.getjTextFieldTK().getText())).collect(Collectors.toList()).get(0);
            dashboard1.getjLabel6().setText(resultUser.getHoten());
            dashboard1.setVisible(true);
            dashboard1.getjLabel1().setVisible(true);
            dashboard1.getjInput().setVisible(false);
            dashboard1.getjCreateOrder().setVisible(false);
            dashboard1.getjBaoCao().setVisible(false);
            dashboard1.getjOrder().setVisible(false);
        } else
        {
            JOptionPane.showMessageDialog(this, "Đăng nhập thất bại!!");
        }
    }//GEN-LAST:event_jBtnLoginActionPerformed

    private void jLabelCloseMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jLabelCloseMouseClicked
    {//GEN-HEADEREND:event_jLabelCloseMouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabelCloseMouseClicked

    private void jTextFieldTKMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jTextFieldTKMouseClicked
    {//GEN-HEADEREND:event_jTextFieldTKMouseClicked
        jTextFieldTK.setText(null);
    }//GEN-LAST:event_jTextFieldTKMouseClicked

    private void jPasswordFieldMKKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jPasswordFieldMKKeyPressed
    {//GEN-HEADEREND:event_jPasswordFieldMKKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            jBtnLogin.doClick();
        }
    }//GEN-LAST:event_jPasswordFieldMKKeyPressed

    private void jBtnLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnLoginMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jBtnLoginMouseClicked

    public JPasswordField getjPasswordField1()
    {
        return jPasswordFieldMK;
    }

    public void setjPasswordField1(JPasswordField jPasswordField1)
    {
        this.jPasswordFieldMK = jPasswordField1;
    }

    public JTextField getjTextField2()
    {
        return jTextFieldTK;
    }

    public void setjTextField2(JTextField jTextField2)
    {
        this.jTextFieldTK = jTextField2;
    }

    public JLabel getjLabelMinimize()
    {
        return jLabelMinimize;
    }

    public void setjLabelMinimize(JLabel jLabelMinimize)
    {
        this.jLabelMinimize = jLabelMinimize;
    }

    public JButton getjBtnLogin()
    {
        return jBtnLogin;
    }

    public void setjBtnLogin(JButton jBtnLogin)
    {
        this.jBtnLogin = jBtnLogin;
    }

    public JLabel getjLabelClose()
    {
        return jLabelClose;
    }

    public void setjLabelClose(JLabel jLabelClose)
    {
        this.jLabelClose = jLabelClose;
    }

    public JPasswordField getjPasswordFieldMK()
    {
        return jPasswordFieldMK;
    }

    public void setjPasswordFieldMK(JPasswordField jPasswordFieldMK)
    {
        this.jPasswordFieldMK = jPasswordFieldMK;
    }

    public JTextField getjTextFieldTK()
    {
        return jTextFieldTK;
    }

    public void setjTextFieldTK(JTextField jTextFieldTK)
    {
        this.jTextFieldTK = jTextFieldTK;
    }

    public static HashMap<String, Tag> getTagMap()
    {
        return tagMap;
    }

    public static void setTagMap(HashMap<String, Tag> tagMap)
    {
        LoginForm1.tagMap = tagMap;
    }

    public static int getFlag()
    {
        return flag;
    }

    public static void setFlag(int flag)
    {
        LoginForm1.flag = flag;
    }

    public GanTagForm1 getInputForm()
    {
        return ganTagForm;
    }

    public void setInputForm(GanTagForm1 inputForm)
    {
        this.ganTagForm = inputForm;
    }

    public QuetDonForm1 getOutputForm()
    {
        return quetDonForm;
    }

    public void setOutputForm(QuetDonForm1 outputForm)
    {
        this.quetDonForm = outputForm;
    }

    @Override
    public void onTagReported(ImpinjReader reader, TagReport tr)
    {
        if (flag == 1)
        {
            System.out.println("===>OK Nhap");
            List<Tag> tags = tr.getTags();
            for (Tag t : tags)
            {
                System.out.println("===>Bắt đầu quét để gắn Tag");
                if (!tagMap.containsKey(t.getEpc().toString()))
                {
                    tagMap.put(t.getEpc().toString(), t);
                    rfidTagDTO = new RFIDTagDTO();
                    rfidTagDTO.setTagId(t.getEpc().toString());
                    rfidTagDTO.setTagGateIn(String.valueOf(t.getAntennaPortNumber()));
                    rfidTagDTO.setTagDateIn(ult.createDateNow());
                    ganTagForm.tagList.add(rfidTagDTO);
                    System.out.println("ok??????????????????????????");
                    ganTagForm.createTagAuto();
                }
            }
        } else if (flag == 2)
        {
            System.out.println("===>OK Xuat");
            List<Tag> tags = tr.getTags();
            for (Tag t : tags)
            {
                System.out.println("==>Bắt đầu quét để xuất đơn");
                if (!tagMap.containsKey(t.getEpc().toString()))
                {
                    tagMap.put(t.getEpc().toString(), t);
                    rfidTagDTO = new RFIDTagDTO();
                    rfidTagDTO.setTagId(t.getEpc().toString());
                    rfidTagDTO.setTagGateOut(String.valueOf(t.getAntennaPortNumber()));
                    rfidTagDTO.setTagDateOut(ult.createDateNow());
                    for (RFIDTagDTO dto : tagDTOsMR)
                    {
                        if (dto.getTagId().equals(rfidTagDTO.getTagId()))
                        {
                            System.out.println("xuat ra" + dto);
                            if (dto.getOrderId() != null && !dto.getOrderId().equals(""))
                            {
                                quetDonForm.errorString += "Tag" + rfidTagDTO.getTagId() + "nay da ton tai trong don khac!!!";
                                quetDonForm.checkError();
                                return;
                            }
                            rfidTagDTO.setProductId(dto.getProductId());

                            quetDonForm.tagList.add(rfidTagDTO);
                            if (quetDonForm.handleMap.containsKey(rfidTagDTO.getProductId()))
                            {
                                quetDonForm.handleMap.put(rfidTagDTO.getProductId(), quetDonForm.handleMap.get(rfidTagDTO.getProductId()) + 1);
                            } else
                            {
                                quetDonForm.handleMap.put(rfidTagDTO.getProductId(), 1);
                            }
                            quetDonForm.scanSanPham(rfidTagDTO.getProductId());
                            System.out.println("ok??????????????????????????");
                            return;
                        }
                    }
                    quetDonForm.errorString += "Tag" + rfidTagDTO.getTagId() + " không ton tai!!!";
                    quetDonForm.checkError();
                    System.out.println("OKKKWQW");
//                    outputForm.initTagAuto();
                }
            }
        }
    }

    public static void main(String[] args)
    {
        LoginForm1 loginForm1 = new LoginForm1();

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnLogin;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelClose;
    private javax.swing.JLabel jLabelMinimize;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordFieldMK;
    private javax.swing.JTextField jTextFieldTK;
    // End of variables declaration//GEN-END:variables

}
